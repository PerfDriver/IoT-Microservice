<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>
@*<script type="text/javascript">

    var manifests;
    var currManifest;
    var newManifest;

    //////////////////////////////////////////////////////////////////////////////
    // I N I T I A L I Z E
    //////////////////////////////////////////////////////////////////////////////

    $(document).ready(function() {
        getManifests();
    });

    //////////////////////////////////////////////////////////////////////////////
    // G E T  M A N I F E S T S
    //////////////////////////////////////////////////////////////////////////////

    function getManifests() {

        $.ajax({
            type: "get",
            async: "true",
            url: "https://looksfamiliar.azure-api.net/v1/config/admin/manifests?subscription-key=69e9c44e983640f884179e7b991741d7",
            dataType: "json",
            success: function (data) {
                manifests = data;
                var combo = document.getElementById("Manifests");

                for (var i = combo.options.length - 1; i >= 0; i--) {
                    combo.remove(i);
                }

                for (var j = 0; j <= manifests.list.length; j++)
                {
                    combo.options.add(new Option(manifests.list[j].name, manifests.list[j].id));
                }

                combo.selectedIndex = 0;
                combo.options[0].selected = true;
                manifestSelected();
            },
            error: function(jqXhr, textStatus, errorThrown) {
                alert('jqXHR = ' + jqXhr + ', textStatus = ' + textStatus + ', errorThrown = ' + errorThrown);
            }
        });
    }

    //////////////////////////////////////////////////////////////////////////////
    // M A N I F E S T  S E L E C T E D
    //////////////////////////////////////////////////////////////////////////////

    function manifestSelected() {
        var combo = document.getElementById("Manifests");
        var table = document.getElementById("AttributesTable");
        var text1 = document.getElementById("ManifestName");
        var text2 = document.getElementById("ManifestDesc");
        var text3 = document.getElementById("ManifestCacheTTL");

        currManifest = manifests.list[combo.selectedIndex];

        // readonly atttributes
        table.rows[0].cells[1].innerText = currManifest.id;
        table.rows[1].cells[1].innerText = currManifest.modified.toString();
        table.rows[2].cells[1].innerText = currManifest.version;

        // editable attributes
        text1.value = currManifest.name;
        text2.value = currManifest.description;
        text3.value = currManifest.cachettl;
    }

    //////////////////////////////////////////////////////////////////////////////
    // A D D  M A N I F E S T
    //////////////////////////////////////////////////////////////////////////////

    function addManifest() {
        var combo = document.getElementById("Manifests");
        var table = document.getElementById("AttributesTable");
        var text1 = document.getElementById("ManifestName");
        var text2 = document.getElementById("ManifestDesc");
        var text3 = document.getElementById("ManifestCacheTTL");
        var saveButton = document.getElementById("SaveButton");
        saveButton.prop('disabled', false);

        combo.selectedIndex = -1;

        // readonly atttributes
        table.rows[0].cells[1].innerText = "[id will generated on save]";
        table.rows[1].cells[1].innerText = new Date().toString();
        table.rows[2].cells[1].innerText = "1.0.0.0";

        // editable attributes
        text1.value = "[microservice name]";
        text2.value = "[microservice description]";
        text3.value = "10";
    }

    //////////////////////////////////////////////////////////////////////////////
    // U P D A T E  M A N I F E S T
    //////////////////////////////////////////////////////////////////////////////

    function updateManifest() {
        var text1 = document.getElementById("ManifestName");
        var text2 = document.getElementById("ManifestDesc");
        var text3 = document.getElementById("ManifestCacheTTL");

        currManifest.name = text1.value;
        currManifest.description = text2.value;
        currManifest.cacheTTL = text3.value;

        if (currManifest.name == "") {
            alert("Microservice Name required");
            getManifests();
            return;
        }

        var data = '{"modified": "2015-08-22T19:58:55.5138236+00:00","name": "BiometricsAPI","description": "The Biometrics API provides contextual access to real-time telemetry coming from BioMax devices.","version": "1.0","lineitems": [{"key": "PublicAPI","val": "https://looksfamiliar.azure-api.net/v1/biometrics"}],"id": "993ddab5-6a5f-453f-b2e9-d3e9dea4512d","cachettl": 10}';

        $.ajax({
            type: "put",
            async: "true",
            url: "https://looksfamiliar.azure-api.net/v1/config/admin/manifests?subscription-key=69e9c44e983640f884179e7b991741d7",
            data: data,
            dataType: "json",
            success: function (data) {
                alert(data.name + " Manifest PUT successful!");
                getManifests();
            },
            error: function (jqXhr, textStatus, errorThrown) {
                alert('jqXhr = ' + jqXhr + ', textStatus = ' + textStatus + ', errorThrown = ' + errorThrown);
            }
        });
    }

    //////////////////////////////////////////////////////////////////////////////
    // S A V E  M A N I F E S T
    //////////////////////////////////////////////////////////////////////////////

    function saveManifest() {
        var text1 = document.getElementById("ManifestName");
        var text2 = document.getElementById("ManifestDesc");
        var text3 = document.getElementById("ManifestCacheTTL");

        var newManifest = new Object();
        newManifest.id = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
        newManifest.name = text1.value;
        newManifest.description = text2.value;
        newManifest.cachettl = text3.value;
        newManifest.version = "1.0.0.0";
        newManifest.modified = new Date().getUTCDay().toString();

        if (newManifest.name.isEqual("")) {
            alert("Microservice Name required");
            return;
        }

        $.ajax({
            type: "post",
            async: "true",
            url: "https://looksfamiliar.azure-api.net/v1/config/admin/manifests?subscription-key=69e9c44e983640f884179e7b991741d7",
            data: newManifest,
            dataType: "json",
            success: function (data) {
                alert("Manifest POST successful!");
                document.getElementById("SaveButton").prop('disabled', true);
                getManifests();
            },
            error: function (msg, url, line) {
                alert('msg = ' + msg + ', url = ' + url + ', line = ' + line);
            }
        });
    }

</script>*@

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @Html.ActionLink("ConfigM Admin", "Index", "Home", new {area = ""}, new {@class = "navbar-brand"})
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Home", "Index", "Home", new {area = ""}, null)</li>
                <li>@Html.ActionLink("API", "Index", "Help", new {area = ""}, null)</li>
            </ul>
        </div>
    </div>
</div>
<div class="container body-content">
    @RenderBody()
    <hr/>
    <footer>
        <p>&copy; @DateTime.Now.Year - Bob Familiar</p>
    </footer>
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@RenderSection("scripts", required: false)
</body>
</html>
